<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Reloj.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJtv
        kBefbY1lpnWRu6Vyjuahbo37oG6O+qRyjuSkcpC3n22NZZ9qihgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJlm
        iA+jcY6KonCO9b+UmPTgvKL/8tOo//nbqv/22an/7s6n/9u2of+9kZbvonCO9aFwj42laYcRAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAoGuOKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACcbosso3CP5cCUl/X01aj//+Os//bYqf/hvqL/1a6e/9Sunv/fu6L/9tmp///jrP/11qn/wZWY9aNx
        jumea48yAAAAAAAAAAAAAAAAAAAAAAAAAACebI2EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAoGyPO6NxjvTbtZ/9/+Os/+vKpv+4i5P/o3GN/7WGiv/AkIf/wZGH/7eHiv+kco7/toiT/+nI
        pf//46z/3rqi/qNxjvSgbY5GAAAAAAAAAACfcI8QnmyNdJ9sjeqebI10mWaIDwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKJvkR6icI/t5MGk/v/jrP/Qqpz/pnSN/8yeg//pvHz/6757/+u+e//rvnv/6757/+m8
        fP/PoIL/qnmN/8mfmv/94av/58al/6JwjfKfboolAAAAAAAAAAAAAAAAn2yOkAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAApHKPydOtnfv/46z/yqCZ/7B/jP/jtX3/6757/+u+e//rvnv/6757/+u+
        e//rvnv/6757/+u+e//nunz/tISK/76Rlf//4qz/1K+d+6RyjtT/AP8BAAAAAAAAAACfaow1AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ5tj0SpeZHz/eGr/965of+se4z/5rh8/+u+e//rvnv/6757/+u+
        e//rvnv/6757/+u+e//rvnv/6757/+u+e//pvHz/sICL/9Grnf/94av/qXmQ9J9rjUoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApXWPyd67of/836v/qnmP/9utfv/rvnv/6757/+u+
        e//rvnv/6757/+u+e//rvnv/6757/+u+e//rvnv/6757/+u+e//gsn7/pnWO///jrP/fvKH/pnSQzgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKRtkg6icI74+96r/9u2of+4iIn/6757/+u+
        e//rvnv/6757/+u+e//rvnv/6757/+u+e//rvnv/6757/+u+e//rvnv/6757/+O2fP+peI7//+Os//ve
        q/+hb474nXaJDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn22OTbaIlfD/46z/vJCU/9Gi
        gf/rvnv/6757/+u+e//rvnv/6757/+u+e//rvnv/6757/+u+e//rvnv/6757/+u+e//rvnv/wpKH/8OZ
        l///46z//+Os/7WHlPCea41MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgbIxmw5mZ9f/j
        rP+reo7/4rR+/+u+e//PoYL/rn2M/59tjf+hbY3/t4eL/9KkgP/pvHz/6757/+u+e//rvnv/5rl8/8KS
        hv+sfI//9tmp///jrP//46z/w5iY9Z5rjGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ9t
        jHrNpJz9/+Os/6Jvjf/pu3z/xpaF/61+j//lw6T//eGr//veq//fvKH/uYuT/6Ryjf+wgIz/t4eK/7OD
        jP+kco7/xZqX//nbqv/wz6f//+Os/7iLlv+kcI/+oGuOrgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAnmuNacWbmff/46z/pnSN/96xfv+mdI3/9deo///jrP//46z//+Os///jrP//46z//N+r/+3N
        pv/lw6T/6sml//zgq///46z//+Os/7GDk//hw7P/8t3Q//Lg1v6ldJLtn22NYAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACgbI1OuIqV8P/jrP+xgZD/vIuG/8CUlv//46z//+Os///jrP//46z//+Os///j
        rP//46z//+Os///jrP//46z//+Os/8SZmP/w06//7tnM/+bOzP//8uP///Lj/+HHx/OgbY7znmyMZgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ5tkhWicY73/OCr/8uim/+hboz/062e///jrP//46z//+Os///j
        rP//46z//+Os///jrP//46z//+Os//ncqv/+4qz/3Lqs/8ilsf//8uP///Lj//Ti2f/Amar+qXiT+LuO
        l/micI7zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKZ0j9Hiv6L/7s6n/6Btjf/Xsp///+Os///j
        rP//46z//+Os///jrP//46z//+Os///jrP//46z/yqGb/8Obof//8uL///Lj///y4//iysn/onCQ/rSH
        lv353Kr/7s6n/6RykOcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoW2PVK+AkfT/4qz/xJiY/9y3
        oP//46z//+Os///jrP//46z//+Os///jrP//46z/99ip/+rJpf/85sP/28DD///y4///8uP/0bK6+6V1
        k/ykk7z/qYKe/7OFlf/Blpj0o3KPggAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AP8BpXOP0diy
        oPz/46z//+Os///jrP//46z//+Os///jrP//46z//+Os///jrP/x0qf/qnmT/+rVz///8uP///Hj/8ej
        sfWoe5T5p5zG/6ehzf+noM3/qIyu/qFvj/Ogb41TAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACeaY8ipHKP8OjHpf//46z//+Os///jrP//46z//+Os///jrP//46z/5cOk//fcsv/35tr//O3g///y
        4//NrLb2qnyV+KmfyP+noc3/p6HN/6ehzf+noc3/ppbB/Z9vkfKea43DlWqVDAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACdaow8o3KO8uC9ov7/46z//+Os///jrP//46z//+Os///jrP/TrZ//roCZ///y
        4///8uP/2r/C/qd3k/iqn8X/p6HN/6ehzf+noc3/p6HN/6WUvf+hdJf/pXyf/6N0l/6fbIxvAAAAAAAA
        AAAAAAAAAAAAAAAAAACSbZIHqoCABgAAAACdbY0vo3GP6sSamfj22Kn//+Os///jrP//46z/9tip/+bI
        sv/87eD///Lj/+vW0f+ldZL7q57C/6ehzf+noc3/p6HN/6ehzf+ooc3/pH2g/7KdxP+6stv/pX2g+aBs
        jVMAAAAAAAAAAAAAAAAAAAAAAAAAAJ5rjzKhbY0xAAAAAAAAAACZZowUo3GOlaJwjvXBlpj04b2i//fZ
        qv/Vrp7/xqCq///y4//87uH/qHqV/aN3l/+noM3/p6HN/6ehzf+noc3/o4uz/6+awf+6stv/urLb/7Kd
        xP+gcJHqkm2SBwAAAAAAAAAAAAAAAAAAAAAAAAAAoGyMZp9tjWUAAAAAAAAAAAAAAAAAAAAAo3CPGZ5r
        jWmmdI+7pHOP6aJvjfeoeJX89OLZ/9S2vf65jZv3roGW/6OIrv+noc3/p6HN/6SOt/+hdJf/uKzU/7qy
        2/+2qdH/oXKU+p9si0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgbY2bn2yNmgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/wD/Aah5lo2mdZPxpnWS7+zMpv/x06f/onKR/6WUvv+mnMb/oXGT/7Wm
        zf+6stv/t6vT/6N2mfyhbpFvAAAAAAAAAAAAAAAAAAAAAKRtkg6ebY1nnmyNzp9sjf+fbI3/n2yNzZ5t
        jWekbZIOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKBsjVOgbY39xJqZ+6Ryj/Wlc5DBoXGT+6OA
        pf+tj7T/urLb/7Wmzf+hc5b8n3CTfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn22Oop9t
        jqIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKBtjkafbIxvn2yOLQAA
        AACgdJicn22O/7anz/+tkLX+oHGS959ujlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACga41rn2yOagAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKpVqgOgcJLmoG+R9aFwk6ibbYkcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJ5rizehbY42AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAkm2SB6qAgAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////8D///4AH//8AA/f+AAH3/AAA9/gAAH/4AAB/8AAAP/AA
        AD/wAAA/8AAAP/AAAB/wAAAf8AAAD/AAAAfwAAAH+AAAB/gAAA/8AAAD/gAAA/8AAAP/gAAD//AAB/P+
        AA/h/4Af8//4P////H////////////////8=
</value>
  </data>
</root>